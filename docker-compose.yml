version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: gaia-mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: grow
      TZ: Asia/Shanghai
    volumes:
      - mysql_data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot" ]
      interval: 5s
      timeout: 5s
      retries: 10

  # Redis缓存
  redis:
    image: redis:7.0
    container_name: gaia-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 10

  # Nacos服务
  nacos:
    image: nacos/nacos-server:v2.2.3
    container_name: gaia-nacos
    restart: always
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    environment:
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: mysql
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_DB_NAME: nacos_config
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: root
      NACOS_AUTH_ENABLE: "true"
      JVM_XMS: 512m
      JVM_XMX: 512m
    volumes:
      - nacos_data:/home/nacos/data
    depends_on:
      mysql:
        condition: service_healthy

  # Sentinel控制台
  sentinel:
    image: bladex/sentinel-dashboard:1.8.6
    container_name: gaia-sentinel
    restart: always
    ports:
      - "8858:8858"
    environment:
      JAVA_OPTS: "-Dserver.port=8858 -Dcsp.sentinel.dashboard.server=localhost:8858 -Dproject.name=sentinel-dashboard"

  # Minio对象存储
  minio:
    image: minio/minio:RELEASE.2023-06-29T05-12-28Z
    container_name: gaia-minio
    restart: always
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 5s
      timeout: 5s
      retries: 10

  # Prometheus监控
  prometheus:
    image: prom/prometheus:v2.46.0
    container_name: gaia-prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  # Grafana可视化
  grafana:
    image: grafana/grafana:10.0.0
    container_name: gaia-grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    depends_on:
      - prometheus

  # SkyWalking APM
  skywalking-oap:
    image: apache/skywalking-oap-server:9.3.0
    container_name: gaia-skywalking-oap
    restart: always
    ports:
      - "11800:11800"
      - "12800:12800"
    environment:
      SW_STORAGE: elasticsearch
      SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200
    depends_on:
      elasticsearch:
        condition: service_healthy

  skywalking-ui:
    image: apache/skywalking-ui:9.3.0
    container_name: gaia-skywalking-ui
    restart: always
    ports:
      - "8090:8080"
    environment:
      SW_OAP_ADDRESS: skywalking-oap:12800
    depends_on:
      - skywalking-oap

  # ElasticSearch (SkyWalking依赖)
  elasticsearch:
    image: elasticsearch:7.17.9
    container_name: gaia-elasticsearch
    restart: always
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 10s
      timeout: 5s
      retries: 10

# 定义持久化数据卷
volumes:
  mysql_data:
  redis_data:
  nacos_data:
  minio_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:
